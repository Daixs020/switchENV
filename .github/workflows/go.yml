# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags:
    - v*
    
jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        goarch: [arm64,amd64]
        goos: [darwin]
        
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    #- name: Create Release
      #id: create_release
      #uses: actions/create-release@v1
      #env:
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #with:
        #tag_name: ${{ github.ref }}
        #release_name: ${{ github.ref }}
        #draft: false
        #prerelease: false
        
    - name: Get version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      
    - name: Build exe
      run: go build -o switchENV-${{ matrix.goos }}-${{ steps.get_version.outputs.VERSION }}.exe
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      
    - name: Packaging...
      run: tar czf switchENV-${{ matrix.goos }}-${{ steps.get_version.outputs.VERSION }}.tgz switchENV-${{ matrix.goos }}-${{ steps.get_version.outputs.VERSION }}.exe
      
    - name: Uploading assets...
      if: ${{ !env.ACT }}
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./switchENV-${{ matrix.goos }}-${{ steps.get_version.outputs.VERSION }}
        asset_name: switchENV-${{ matrix.goos }}-${{ steps.get_version.outputs.VERSION }}
        asset_content_type: application/gzip
